import QtQuick 1.1

$$QML_IMPORT_QTCOMPONENTS
$$QML_IMPORT_QTCOMPONENTS_EXTRAS

import MeeBible 0.1
import \"unicomponents\"

UniSheet {
    id: dialog


    property QtObject translation: settings.translation

    property alias query: field.text

    signal placeSelected(variant place)


    function startSearch() {
        if (field.text == \"\")
            return

        // cache.search(translation, field.text)
        results.clear()
        var found = cache.searchTest(translation, field.text)
        for (var i = 0; i < found.length; i++)
        {
            var place = searchResultAccesser.place(found[i])
            results.append({
                title: placeAccesser.string(place, settings.translation),
                subtitle: searchResultAccesser.preview(found[i]),
                place: place,
                matchCount: searchResultAccesser.matchCount(found[i])
            })
        }

        item.state = results.count == 0 ? \"nothing\" : \"list\"
    }


    onVisibleChanged: {
        if (visible && field.text == \"\")
            field.forceActiveFocus()
    }


    headerComponents: [
        UniSearchField {
            id: field

            placeholderText: qsTr(\"Search...\")

            anchors.left: parent.left
            anchors.leftMargin: 10
            anchors.rightMargin: 10
            anchors.verticalCenter: parent.verticalCenter
            anchors.right: SYMBIAN ? searchButton.left : parent.right


            Keys.onReturnPressed: {
                if (! SYMBIAN)
                    platformCloseSoftwareInputPanel()
                dialog.startSearch()
            }


            Image {
                id: image

                // source: field.text.length > 0 ? \"image://theme/icon-m-input-clear\" : \"image://theme/icon-m-common-search\"
                source: \"image://theme/icon-m-common-search\"

                anchors.verticalCenter: parent.verticalCenter
                anchors.right: parent.right
                anchors.rightMargin: 10

                width: height


//              It seems like MouseArea doesn\'t work in TextField in 39-5 firmware :(
//                MouseArea {
//                    anchors.fill: parent
//
//                    onClicked: field.visible = false // dialog.startSearch()
//                }
            }

            UniTextFieldBusyIndicator {
                id: busyIndicator

                anchors.verticalCenter: parent.verticalCenter
                anchors.right: parent.right
                anchors.rightMargin: 15

                running: visible
            }

            // state: cache.searchInProgress ? \"busy\" : \"idle\"
            state: \"idle\"

            states: [
                State {
                    name: \"idle\"

                    PropertyChanges {
                        target: image
                        visible: true
                    }

                    PropertyChanges {
                        target: busyIndicator
                        visible: false
                    }
                },
                State {
                    name: \"busy\"

                    PropertyChanges {
                        target: image
                        visible: false
                    }

                    PropertyChanges {
                        target: busyIndicator
                        visible: true
                    }
                }
            ]
        },

        Button {
            id: searchButton

            visible: SYMBIAN

            text: qsTr(\"Search\")
            anchors.right: parent.right
            anchors.rightMargin: 10
            anchors.verticalCenter: parent.verticalCenter

            onClicked: dialog.startSearch()
        }
    ]

    content: Item {
        id: item


        // Connections {
        //     target: cache

        //     onSearchStarted: {
        //         item.state = \"list\"

        //         results.clear()
        //     }
        //     onSearchFinished: {
        //         if (results.count == 0)
        //             item.state = \"nothing\"
        //     }

        //     onMatchFound: {
        //         results.append({
        //             title: placeAccesser.string(place, settings.translation),
        //             subtitle: match,
        //             place: place,
        //             matchCount: matchCount
        //         })
        //     }
        // }


        anchors.fill: parent



        ListView {
            id: list

            anchors.fill: parent

            clip: true

            cacheBuffer: 70

            model: ListModel {
                id: results
            }

            delegate: UniListItem {
                onClicked: dialog.placeSelected(place)

                clip: true

                x: 10
                width: parent.width - 20

                Item {
                    anchors.right: parent.right
                    anchors.top: parent.top
                    anchors.topMargin: 15

                    width: 25
                    height: 25

                    BorderImage {
                        source: \"countbubble.png\"
                        anchors.fill: parent
                        border { left: 10; top: 10; right: 10; bottom: 10 }
                    }

                    Text {
                        text: matchCount
                        color: settings.inverted ? \'#fff\' : \'#000\'
                        font.pixelSize: 15
                        anchors.verticalCenter: parent.verticalCenter
                        anchors.horizontalCenter: parent.horizontalCenter
                    }
                }
            }
        }
        ScrollDecorator { flickableItem: list; }

        Item {
            id: nothing

            anchors.fill: parent

            Label {
                anchors.verticalCenter: parent.verticalCenter
                anchors.left: parent.left
                anchors.right: parent.right

                wrapMode: Text.Wrap
                horizontalAlignment: Text.AlignHCenter

                text: qsTr(\"Nothing found\")
                color: settings.inverted ? \'#444\' : \'#888\'
                font.pixelSize: 60
                font.family: \"Nokia Pure Text Light\"
            }
        }


        state: \"list\"

        states: [
            State {
                name: \"list\"

                PropertyChanges {
                    target: list
                    visible: true
                }
                PropertyChanges {
                    target: nothing
                    visible: false
                }
            },
            State {
                name: \"nothing\"

                PropertyChanges {
                    target: list
                    visible: false
                }
                PropertyChanges {
                    target: nothing
                    visible: true
                }
            }
        ]
    }
}
